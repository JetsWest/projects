public void mergeSort(){
        mergeSort(this.cards);
    }
    private Card[] mergeSort(Card[] cards){
        if (cards.length <= 1){
            return cards;
        }

        Card[] a = new Card[cards.length/2]; 
        for (int i = 0; i < cards.length/2; i++){
            a[i] = cards[i];
        }
        Card[] b = new Card[cards.length-a.length];
        for (int i = a.length; i < cards.length; i++){
            b[i - a.length] = cards[i];
        }
        
        Card[] temp = new Card[a.length+b.length];
        int Mark = 0;
        int aMark = 0;
        int bMark = 0;
        
        while (aMark < a.length && bMark < b.length){
                if (a[aMark].compareTo(b[bMark]) < 0){
                    temp[Mark] = a[aMark];
                    aMark++;
                }else{
                    temp[Mark] = b[bMark];
                    bMark++;
                }
                Mark++;
        }
        return temp;
    }
}
